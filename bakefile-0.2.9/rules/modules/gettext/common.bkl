<?xml version="1.0" ?>
<!--

  This file is part of Bakefile (http://www.bakefile.org)

  Copyright (C) 2003-2007 Vaclav Slavik

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to
  deal in the Software without restriction, including without limitation the
  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
  sell copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  IN THE SOFTWARE.

  $Id: common.bkl 1151 2008-01-06 10:41:27Z vaclavslavik $

-->
<makefile>

    <set var="LOCALEDIR">$(DATADIR)/locale</set>

    <define-rule name="gettext-catalogs" extends="phony" pseudo="1">
        
        <template>
            <set var="__srcdir">$(nativePaths(SRCDIR))</set>
            <set var="catalog">noname</set>
            
            <set var="linguas_value"/>
            <set var="linguas">
                $(createMakeVar(id, 'linguas_value', 'LINGUAS'))
            </set>
            
        </template>
        
        <define-tag name="srcdir">
            <set var="__srcdir">$(nativePaths(value))</set>
        </define-tag>
        
        <define-tag name="catalog-name">
            <set var="catalog">$(value)</set>
        </define-tag>

        <define-tag name="linguas">
            <set var="linguas_value" append="1">$(value)</set>
        </define-tag>

        <!-- only autoconf backend has meaningful 'make install' -->
        <define-tag name="install-to"/>
        
    </define-rule>

<!--
    
    <define-rule name="gettext-catalogs" extends="phony">
        
        <template>
            <set var="po_files"/>
            <set var="mo_files"/>
            <add-target target="$(id)mo" type="phony" cond="target"/>
            <depends>$(id)mo</depends>
        </template>

        <define-tag name="files">
            <set var="po_files" append="1">$(value)</set>
            <set var="mo_files" append="1">
                $(sources2objects(value, id, '.mo'))
            </set>
        </define-tag>

        <define-tag name="install-to">
            <modify-target target="install_$(id)">
                <command>
                    $(INSTALL_DATA) $(ref('mo_files',id)) $(value)
                </command>
            </modify-target>
        </define-tag>

    </define-rule>
    

    <define-rule name="__po-to-mo" extends="compilation_rule,action">
        <template>
            <set var="cnt">0</set>
        </template>

        <define-tag name="src">
            <set var="cnt">$(int(cnt)+1)</set>
            <command>msgfmt -o $(__targetname) $(value)</command>
        </define-tag>
        <define-tag name="parent-target">
            <dependency-of>$(value)mo</dependency-of>
        </define-tag>
    </define-rule>


-->

</makefile>

